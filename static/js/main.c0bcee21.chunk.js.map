{"version":3,"sources":["components/Join/Join.component.jsx","components/Chat/Chat.component.jsx","components/Chat/ChatComponents/ChatUsers.jsx","components/Chat/ChatComponents/MessageInput.jsx","components/Chat/ChatComponents/Message.jsx","components/Chat/ChatComponents/ChatMessages.jsx","App.js","index.js"],"names":["Join","useState","user","setUser","room","setRoom","className","type","placeholder","onChange","e","target","value","onClick","preventDefault","to","socket","ChatUsers","roomUsers","map","i","key","name","MessageInput","message","sendMessage","setMessage","sendMessageBtn","onKeyPress","Message","username","text","time","index","ReactEmoji","emojify","ChatMessages","messages","Chat","location","setMessages","setRoomUsers","useEffect","queryString","parse","search","io","emit","off","on","msg","newMessages","users","console","log","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0bcee21.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Join() {\n\n    const [user, setUser] = useState('')\n    const [room, setRoom] = useState('')\n\n    const prevDef = (e) => {\n        if (!user || !room) {\n            e.preventDefault()\n        }\n    }\n\n    return (\n        <form className=\"form\">\n            <input type=\"text\"\n                className=\"name\"\n                placeholder=\"Write your name...\"\n                onChange={(e) => setUser(e.target.value)} />\n            <input type=\"text\"\n                className=\"room\"\n                placeholder=\"Write room name...\"\n                onChange={(e) => setRoom(e.target.value)} />\n            <Link\n                onClick={prevDef}\n                to={`/chat?user=${user}&room=${room}`}>\n                <button type=\"submit\" className=\"btn\">Join Chat</button>\n            </Link>\n        </form>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport io from 'socket.io-client'\nimport ChatUsers from './ChatComponents/ChatUsers'\nimport MessageInput from './ChatComponents/MessageInput'\nimport ChatMessages from './ChatComponents/ChatMessages'\n\nlet socket\nconst ENDPOINT = 'https://chat-app-rjs.herokuapp.com/'\n\nexport default function Chat({ location }) {\n\n    const [user, setUser] = useState('')\n    const [room, setRoom] = useState('')\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    const [roomUsers, setRoomUsers] = useState([])\n\n    const sendMessage = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault()\n            socket.emit('chat-message', message)\n            console.log(message)\n            setMessage('')\n        }\n        else {\n            return\n        }\n    }\n\n    const sendMessageBtn = (e) => {\n        console.log(message)\n        socket.emit('chat-message', message)\n        setMessage('')\n    }\n\n    useEffect(() => {\n\n        const { room, user } = queryString.parse(location.search)\n        setUser(user)\n        setRoom(room)\n        socket = io(ENDPOINT)\n\n        socket.emit('join-room', { user, room }, () => {\n\n        })\n\n        return () => {\n            socket.emit('disconnect')\n            socket.off()\n        }\n\n    }, [location]);\n\n    useEffect(() => {\n\n        socket.on('newUser', (msg) => {\n            const newMessages = [...messages, msg]\n            setMessages(newMessages)\n        })\n\n        socket.on('roomUsers', ({ room, users }) => {\n            setRoom(room)\n            setRoomUsers(users)\n        })\n\n        socket.on('chat-message', msg => {\n            const newMessages = [...messages, msg]\n            setMessages(newMessages)\n        })\n    }, [messages]);\n\n\n    return (\n        <div className='chat-wrapper'>\n            <ChatUsers roomUsers={roomUsers} room={room} />\n            <div className=\"chat__messages\">\n                <ChatMessages messages={messages} />\n                <MessageInput\n                    message={message}\n                    sendMessage={sendMessage}\n                    setMessage={setMessage}\n                    sendMessageBtn={sendMessageBtn} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nconst ChatUsers = ({ roomUsers, room }) => {\n    return (\n        <div className=\"chat__users\">\n            <h3 className=\"chat__room-name\">{room}</h3>\n            <div className=\"chat__user-list\">\n                {roomUsers.map((user, i) => <h5 key={i} className=\"chat__user\">{user.name}</h5>)}\n            </div>\n        </div>\n    );\n}\n\nexport default ChatUsers;\n","import React from 'react';\n\nconst MessageInput = ({ message, sendMessage, setMessage, sendMessageBtn }) => {\n    return (\n        <div className=\"message-input\">\n            <input type=\"text\"\n                className=\"message-input__input\"\n                placeholder=\"Type your message...\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                onKeyPress={(e) => sendMessage(e)} />\n            <button className=\"message-input__btn\"\n                onClick={(e) => sendMessageBtn(e)}>Send</button>\n        </div>\n    );\n}\n\nexport default MessageInput;\n","import React from 'react';\nimport ReactEmoji from 'react-emoji'\n\nconst Message = ({ username, text, time, index }) => {\n    return (\n        <div key={index}\n            className='chat__message'>\n            <span> {username} </span>\n            <span className=\"chat__text\">\n                {ReactEmoji.emojify(text)}\n                <span className=\"chat__time\">{time}</span>\n            </span>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from 'react';\n// import ScrollToBottom from 'react-scroll-to-bottom'\nimport Message from './Message'\n\nconst ChatMessages = ({ messages }) => {\n    return (\n        <div className=\"messages\">\n            {messages.map(({ username, text, time }, index) => {\n                return <Message\n                    username={username}\n                    text={text}\n                    time={time}\n                    index={index} />\n            })}\n        </div >\n    );\n}\n\nexport default ChatMessages;\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Join from './components/Join/Join.component'\nimport Chat from './components/Chat/Chat.component'\nimport './App.scss'\n\nexport default function App() {\n    return (\n        <div className=\"container\">\n            <Router>\n                <Route path='/' exact component={Join} />\n                <Route path='/chat' component={Chat} />\n            </Router>\n        </div>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}